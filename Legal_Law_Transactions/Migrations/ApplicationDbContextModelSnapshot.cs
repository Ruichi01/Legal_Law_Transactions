// <auto-generated />
using System;
using Legal_Law_Transactions.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Legal_Law_Transactions.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Legal_Law_Transactions.Models.AdminLog", b =>
                {
                    b.Property<int>("log_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("log_id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("adminId")
                        .HasColumnType("int");

                    b.HasKey("log_id");

                    b.HasIndex("adminId");

                    b.ToTable("AdminLogs");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Application", b =>
                {
                    b.Property<int>("application_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("application_id"));

                    b.Property<string>("feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Pending");

                    b.Property<DateTime>("submitted_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("application_id");

                    b.HasIndex("user_id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Case", b =>
                {
                    b.Property<int>("case_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("case_id"));

                    b.Property<int>("assigned_to_citizen")
                        .HasColumnType("int");

                    b.Property<int>("assigned_to_lawyer")
                        .HasColumnType("int");

                    b.Property<string>("case_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("court_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("case_id");

                    b.HasIndex("user_id");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Document", b =>
                {
                    b.Property<int>("document_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("document_id"));

                    b.Property<int>("assigned_to_citizen")
                        .HasColumnType("int");

                    b.Property<int>("assigned_to_lawyer")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("file_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("last_modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("notarized")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("document_id");

                    b.HasIndex("user_id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Evidence", b =>
                {
                    b.Property<int>("evidence_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("evidence_id"));

                    b.Property<int>("assigned_to_citizen")
                        .HasColumnType("int");

                    b.Property<int>("assigned_to_lawyer")
                        .HasColumnType("int");

                    b.Property<int>("case_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("evidence_id");

                    b.HasIndex("case_id");

                    b.HasIndex("user_id");

                    b.ToTable("Evidences");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.License", b =>
                {
                    b.Property<int>("license_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("license_id"));

                    b.Property<DateTime>("expiry_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("issue_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("license_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("license_id");

                    b.HasIndex("user_id");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Record", b =>
                {
                    b.Property<int>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("record_id"));

                    b.Property<int>("case_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_of_offense")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("last_updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("offense_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("record_id");

                    b.HasIndex("case_id");

                    b.HasIndex("user_id");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Schedule", b =>
                {
                    b.Property<int>("schedule_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("schedule_id"));

                    b.Property<int>("assigned_to_citizen")
                        .HasColumnType("int");

                    b.Property<int>("assigned_to_lawyer")
                        .HasColumnType("int");

                    b.Property<int>("case_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("court_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("courtroom_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("schedule_id");

                    b.HasIndex("case_id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.SessionLog", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SessionTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.ToTable("SessionLogs");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Signature", b =>
                {
                    b.Property<int>("signature_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("signature_id"));

                    b.Property<int>("document_id")
                        .HasColumnType("int");

                    b.Property<string>("signature_hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("signed_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("signature_id");

                    b.HasIndex("document_id");

                    b.HasIndex("user_id");

                    b.ToTable("Signatures");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.AdminLog", b =>
                {
                    b.HasOne("Legal_Law_Transactions.Models.User", "Admin")
                        .WithMany()
                        .HasForeignKey("adminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Application", b =>
                {
                    b.HasOne("Legal_Law_Transactions.Models.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Case", b =>
                {
                    b.HasOne("Legal_Law_Transactions.Models.User", "User")
                        .WithMany("Cases")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Document", b =>
                {
                    b.HasOne("Legal_Law_Transactions.Models.User", "User")
                        .WithMany("Documents")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Evidence", b =>
                {
                    b.HasOne("Legal_Law_Transactions.Models.Case", "Case")
                        .WithMany()
                        .HasForeignKey("case_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Legal_Law_Transactions.Models.User", "User")
                        .WithMany("Evidences")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.License", b =>
                {
                    b.HasOne("Legal_Law_Transactions.Models.User", "User")
                        .WithMany("Licenses")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Record", b =>
                {
                    b.HasOne("Legal_Law_Transactions.Models.Case", "Case")
                        .WithMany()
                        .HasForeignKey("case_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Legal_Law_Transactions.Models.User", "User")
                        .WithMany("Records")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Schedule", b =>
                {
                    b.HasOne("Legal_Law_Transactions.Models.Case", "Case")
                        .WithMany()
                        .HasForeignKey("case_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Case");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Signature", b =>
                {
                    b.HasOne("Legal_Law_Transactions.Models.Document", "Document")
                        .WithMany("Signatures")
                        .HasForeignKey("document_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Legal_Law_Transactions.Models.User", "User")
                        .WithMany("Signatures")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.Document", b =>
                {
                    b.Navigation("Signatures");
                });

            modelBuilder.Entity("Legal_Law_Transactions.Models.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Cases");

                    b.Navigation("Documents");

                    b.Navigation("Evidences");

                    b.Navigation("Licenses");

                    b.Navigation("Records");

                    b.Navigation("Signatures");
                });
#pragma warning restore 612, 618
        }
    }
}
